/**
 * @author  PT28/PT0141 
 * @desc    This module provides common templates for both Charging and ContextData TCs. Most of these templates shall be used to modify the new ones.
 * @see     [17575-1:2016]: Test suite structure and test purpose
 * @see     Electronic fee collection (EFC) — Conformity evaluation of Front End and Back End equipment to ISO 17575-3 — Part 1: Test suite structure and test purpose
 * @remark  See Annex C - Data structures
 * @version $id$
 */
module LibEfc_Common_Templates language "TTCN-3:2010 Advanced Parameterization" {
    /**
     * @desc    [17575-1:2016], Charging
     * @see     Annex A (normative) EFC data type specifications
     */
    import from EfcAutonomousCharging language "ASN.1:1997" all;
    /**
     * @desc    [17575-3:2016], Context data
     * @see     A.2 Data specifications
     */
    import from EfcAutonomousContextData language "ASN.1:1997" all;
    /**
     * @desc    Electronic fee collection (EFC) — Application interface definition for autonomous systems — Part 4: Roaming
     * @see     Annex A (normative) EFC data type specifications
     */
    import from EfcDsrcApplication language "ASN.1:1997" all;
    /**
     * @desc    TTCN-3 does not support ASN.1 parameterization (ETSI ES 201 873-7 V4.5.1 Clause 10)
     *          Common_Parameterised_Asn1_Data TTCN-3 module is a workaround
     */
    import from LibEfc_Common_Parameterised_Asn1_Data all;
    
    import from LibEfc_Common_TypesAndValues all;
    import from LibEfc_Common_Pixits all;
    import from LibEfc_Common_Pics all;
    import from LibEfc_Common_Functions all;

    group Providers_Templates {
        /**
         * @desc    This is the informationOriginator Provider description
         * @see     ISO 14906:2011/Amd1:2015
         */
        template (value) Provider m_informationOriginator := {
            countryCode := PX_ORIGINATOR_EFC_OPERATOR,
            providerIdentifier := PX_ORIGINATOR_RECIPIENT
        } // End of template m_informationOriginator
        /**
         * @desc    This is the informationSender Provider description
         * @see     ISO 14906:2011/Amd1:2015
         */
        template (value) Provider m_informationSender := {
            countryCode := PX_SENDER_EFC_OPERATOR,
            providerIdentifier := PX_SENDER_RECIPIENT
        } // End of template informationSender
        /**
         * @desc    This is the m_tollCharger Provider description
         * @see     ISO 14906:2011/Amd1:2015
         */
        template (value) Provider m_tollCharger := {
            countryCode := PX_TOLLCHARGER_EFC_OPERATOR,
            providerIdentifier := PX_TOLLCHARGER_RECIPIENT
        } // End of template m_tollCharger
        /**
         * @desc    This is the recipient Provider description
         * @see     ISO 14906:2011/Amd1:2015
         */
        template (value) Provider m_recipient := {
            countryCode := PX_RECIPIENT_EFC_OPERATOR,
            providerIdentifier := PX_RECIPIENT_RECIPIENT
        } // End of template m_recipient
        /**
         * @desc    This is the m_tollCharger Provider description
         * @see     ISO 14906:2011/Amd1:2015
         */
        template (value) Provider m_contractProvider := {
            countryCode := PX_TOLLCHARGER_EFC_OPERATOR,
            providerIdentifier := PX_TOLLCHARGER_RECIPIENT
        } // End of template m_contractProvider
    } // End of group Providers_Templates
    
    /**
     * @desc    This group contains all template for ChargeReport message
     * @see     [17575-1:2016], Charging
     */
    group Common_Charging {

        /**
         * @desc    This group contains all template for ChargeReport message
         * @see     B.3.1   ChargeReport
         */
        group Common_Charging_ChargeReport {
            
            /**
             * @desc    This is the minimal form of sent UsageStatementList
             * @remark  All other ChargeReport template shall modify this one
             * @see     [TS 17575-3], Clause 7.6.1 usageStatementList
             */
            template (value) ChargeReport.usageStatementList[-] m_usageStatement_usageStatement(
                                                                                             in template (value) UsageStatement p_usageStatement
            ) := {
                usageStatement := p_usageStatement
            } // End of template m_usageStatement_usageStatement
            
            /**
             * @desc    This is the minimal form of received UsageStatementList
             * @remark  All other ChargeReport template shall modify this one
             * @see     [TS 17575-3], Clause 7.6.1 usageStatementList
             */
            template (present) ChargeReport.usageStatementList[-] mw_usageStatement_usageStatement(
                                                                                                template (present) UsageStatement p_usageStatement := ?
            ) := {
                usageStatement := p_usageStatement
            } // End of template mw_usageStatement_usageStatement
            
            /**
             * @desc    This is the minimal form of received UsageStatementList
             * @remark  All other ChargeReport template shall modify this one
             * @see     [TS 17575-3], Clause 7.6.1 usageStatementList
             */
            template (present) ChargeReport.usageStatementList[-] mw_usageStatement_authenticatedUsageStatement(
                                                                                                             template (present) AuthenticatedUsageStatement p_authenticatedUsageStatement := ?
            ) := {
                authenticatedUsageStatement := p_authenticatedUsageStatement
            } // End of template mw_usageStatement_authenticatedUsageStatement
            
            /**
             * @desc    This is the minimal form of sent ChargeReport message, all optional fields are omitted
             * @see     [TS 17575-3], 7.2.1 ChargeReport
             */
            template (omit) ChargeReport m_chargeReport_default := {
                protocolVersion := c_Iso17575_3AduHeader_protocolVersion,
                obeId := omit, 
                vehicleLPNr := omit,
                paymentMeans := omit,
                serviceProviderContract := m_serviceProviderContract_default,
                tollContext := omit,
                chargeReportFinalRecipient := omit,
                timeOfReport := fx_getMessageDate(),
                reportPeriod := {
                    beginOfPeriod := fx_getMessageDate(-3600), 
                    endOfPeriod := fx_getMessageDate(+3600)
                },
                versionInfo := omit,
                usageStatementList := { 
                    m_usageStatement_usageStatement(m_usageStatement_default) 
                },
                sumVatForThisSession := omit,
                accountStatus := omit,
                chargeReportCounter := omit,
                mileage := omit,
                listOfCccAttributes := omit
            } // End of template m_chargeReport_default

            /**
             * @desc    This is the minimal form of awaited ChargeReport message, all optional fields are ignored
             * @see     [TS 17575-3], 7.2.1 ChargeReport
             */
            template ChargeReport mw_chargeReport_any := {
                protocolVersion := c_Iso17575_3AduHeader_protocolVersion,
                obeId := *, 
                vehicleLPNr := *,
                paymentMeans := *,
                serviceProviderContract := ?,
                tollContext := *,
                chargeReportFinalRecipient := *,
                timeOfReport := *,
                reportPeriod := ?,
                versionInfo := *,
                usageStatementList := ?,
                sumVatForThisSession := *,
                accountStatus := *,
                chargeReportCounter := *,
                mileage := *,
                listOfCccAttributes := *
            } // End of template mw_chargeReport_any
            /**
             * @desc    This is the default form of awaited ChargeReport message. 
             * Only mandatory fields are set, check m_chargeReportContent_default template for these fields 
             * @see     [TS 17575-3], 7.2.1 ChargeReport
             */
            template ChargeReport mw_chargeReport_default
            modifies mw_chargeReport_any := {
                obeId       := ?, // Because of m_chargeReportContent_default.obeId is true
                tollContext := ? // Because of m_chargeReportContent_default.tollContext is true
            } // End of template mw_chargeReport_default
        } // End of group Common_Charging_ChargeReport

        /**
         * @desc    This group contains all template for ChargeReport message
         * @see     B.3.1   ChargeReport
         */
        group Common_Charging_ChargeReportResponse {
            /**
             * @desc    This is the minimal form of sent ChargeReportResponse message
             * @see     B.3.2   ChargeReportResponse
             * @remark  All other ChargeReportResponse template shall modify this one
             */
            template (value) ChargeReportResponse m_chargeReportResponse_default := {
                chargeReportRespSender := omit,
                dataReceived := omit,
                versionsResponse := omit,
                obeStatusForDriver := SetMMIRq_ok_,
                accountUpdate := omit
            } // End of template m_chargeReportResponse_default
        } // End of group Common_Charging_ChargeReportResponse

        /**
         * @desc    This group contains all template for EFC_ContextMark message
         * @see     [17575-1:2016], [17575-3:2016], Charging
         *           - Clause 6
         */
        group EFC_ContextMark_Templates {
            /**
             * @desc    This is the minimal form of awaited EFC_ContextMark message
             * @see     ??
             * @remark  All other EFC_ContextMark template shall modify this one
             */
            template (value) EFC_ContextMark m_serviceProviderContract_default := {
                contractProvider := m_contractProvider,
                typeOfContract := '0002'O,
                contextVersion := 1
            } // End of template m_serviceProviderContract_default
        } // End of group EFC_ContextMark_Templates

    } // End of group Common_Charging

    group Common_contextData {
        
        /**
         * @desc    Group of Context Date describes in [17575-3:2016],  Annex C.1.1: General structure of Context Data
         */
        group ContextData_Common_ADU_Header {
            
            /**
             * @desc    Main send template for any unsecured ADU
             * @param   p_notAuthenticatedIso17575_3Adu Unsecured ADU (of data type Iso17575-3Adu)
             * @see     [17575-3:2016], Clause 7.2 Message authentication (data type Iso17575-3-InformationContent)
             */
            template (value) Iso17575_3InformationContent m_iso17575_3InformationContent_unsecured(
                                                                                                   in template (value) Iso17575_3Adu p_notAuthenticatedIso17575_3Adu
            ) := {
                notAuthenticatedIso17575_3Adu := p_notAuthenticatedIso17575_3Adu
            } // End of template m_iso17575_3InformationContent_unsecured
            
            /**
             * @desc    Main receive template for any unsecured ADU
             * @param   p_notAuthenticatedIso17575_3Adu Unsecured ADU (of data type Iso17575-3Adu)
             * @see     [17575-3:2016], Clause 7.2 Message authentication (data type Iso17575-3-InformationContent)
             */
            template (present) Iso17575_3InformationContent mw_iso17575_3InformationContent_unsecured(
                                                                                                      template (present) Iso17575_3Adu p_notAuthenticatedIso17575_3Adu := ?
            ) := {
                notAuthenticatedIso17575_3Adu := p_notAuthenticatedIso17575_3Adu
            } // End of template mw_iso17575_3InformationContent_unsecured
            
            /**
             * @desc    Main send template for any unsecured ADU
             * @param   p_notAuthenticatedIso17575_3Adu Secured ADU (of data type Iso17575-3Adu)
             * @see     [17575-3:2016], Clause 7.2 Message authentication (data type Iso17575-3-InformationContent)
             */
            template (value) Iso17575_3InformationContent m_iso17575_3InformationContent_secured(
                                                                                                 in template (value) AuthenticatedIso17575_3Adu p_authenticatedIso1575_3Adu
            ) := {
                authenticatedIso1575_3Adu := p_authenticatedIso1575_3Adu
            } // End of template m_iso17575_3InformationContent_secured
            
            /**
             * @desc    Main receive template for any secured ADU
             * @param   p_notAuthenticatedIso17575_3Adu Secured ADU (of data type Iso17575-3Adu)
             * @see     [17575-3:2016], Clause 7.2 Message authentication (data type Iso17575-3-InformationContent)
             */
            template (present) Iso17575_3InformationContent mw_iso17575_3InformationContent_secured(
                                                                                                    template (present) AuthenticatedIso17575_3Adu p_authenticatedIso1575_3Adu := ?
            ) := {
                authenticatedIso1575_3Adu := p_authenticatedIso1575_3Adu
            } // End of template mw_iso17575_3InformationContent_secured
            
            /**
             * @desc    Main send template for any ADU
             * @param   p_aduHeader ADU header (of data type Iso17575-3AduHeader)
             * @param   p_aduBody ADU body (of data type Iso17575-3AduBody)
             * @see     [17575-3:2016], Clause 7.3 Application data unit structure (data type Iso17575-3Adu)
             * @see     [17575-3:2016],  Figure 4 — Structure of an ISO 17575-3 ADU
             */
            template (value) Iso17575_3Adu m_iso17575_3Adu(
                                                           in template (value) Iso17575_3AduHeader p_aduHeader, 
                                                           in template (value) Iso17575_3AduBody p_aduBody
            ) := {
                aduHeader   := p_aduHeader, 
                aduBody     := p_aduBody
            } // End of template m_iso17575_3Adu
            
            /**
             * @desc    Main receive template for any ADU
             * @see     [17575-3:2016], Context data - Clause 7 ISO 17575-3 ADU and Annex C.1.1: General structure of Context Data - Table C.6
             * @remark  All receive templates shall modify this one
             */
            template (present) Iso17575_3Adu mw_iso17575_3Adu_default := {
                aduHeader   := mw_aduHeader_any,
                aduBody     := ?
            } // End of template mw_iso17575_3Adu_default
            
            /**
             * @desc    Verify structure of sent Iso17575-3Adu(s),and allowed values of all data elements according to Table C.6: General Structure of Context Data
             * @see     [17575-3:2016], Context data - Clause 7 ISO 17575-3 ADU and Annex C.1.1: General structure of Context Data - Table C.6
             * @remark  All receive templates shall modify this one
             */
            template Iso17575_3Adu mw_iso17575_3Adu 
            modifies mw_iso17575_3Adu_default := {
                aduBody := {
                    tollContextOverview             := ?,
                    tollContextPartitionOverview    := *,
                    tariffTable                     := *,
                    currencyConversionTable         := *,
                    tariffClassDefinition           := *,
                    localVehicleClassDefinition     := *,
                    timeClassDefinition             := *,
                    userClassDefinition             := *,
                    tollContextLayout               := *,
                    chargeReportingEvents           := *,
                    chargeReportConfiguration       := *,
                    tollContextVersion              := ?
                }
            } // End of template mw_iso17575_3Adu
            
            /**
             * @desc    Main receive template for any ADU
             * @see     [17575-3:2016], Context data - Clause 7 ISO 17575-3 ADU and Annex C.1.1: General structure of Context Data - Table C.6
             * @remark  All receive templates shall modify this one
             */
            template (present) Iso17575_3Adu mw_iso17575_3Adu_TollContext_default(
                                                                                  in template (present) Provider p_tollContext := ?
            ) modifies mw_iso17575_3Adu := {
                aduHeader := mw_aduHeader_TollContext(p_tollContext)      // See clause 7.2 ADU header
            } // End of template mw_iso17575_3Adu_TollContext_default
            
            /**
             * @desc    Verify structure of sent Iso17575-3Adu(s),and allowed values of all data elements according to Table C.6: General Structure of Context Data
             * @param   p_tollCharger Provider value to match
             * @see     [17575-3:2016], Context data - Clause 7 ISO 17575-3 ADU and Annex C.1.1: General structure of Context Data - Table C.6
             * @remark  All receive templates shall modify this one
             */
            template (present) Iso17575_3Adu mw_iso17575_3Adu_TollContext(
                                                                          in template (present) Provider p_tollContext := ?
            ) := mw_iso17575_3Adu_TollContext_default(p_tollContext); // End of template mw_iso17575_3Adu_TollContext
           
            /**
             * @desc    Main receive template for any ADU header
             * @see     [17575-3:2016], Context data - Clause 7.2 ADU Header - Table 1: Data elements of the ADU Header
             * @remark  All receive templates shall modify this one
             */
            template Iso17575_3AduHeader mw_aduHeader_any := {
                protocolVersion         := c_Iso17575_3AduHeader_protocolVersion,
                informationSender       := ?,
                informationOriginator   := ?,
                tollContext             := ?,
                aduSequenceNumber       := ?,
                messageDate             := ?
            } // End of template mw_aduHeader_any
            
            /**
             * @desc    Main receive template for any ADU header
             * @param   p_tollContext TollContext value to match
             * @param   p_contextId ContextId value to match
             * @see     [17575-3:2016], Context data - Clause 7.2 ADU Header - Table 1: Data elements of the ADU Header
             * @remark  All receive templates shall modify this one
             */
            template (present) Iso17575_3AduHeader mw_aduHeader_TollContext( 
                                                                            in template (present) Provider p_tollContext := ?
            ) modifies mw_aduHeader_any := { 
                tollContext := p_tollContext
            } // End of template mw_aduHeader_TollContext
            
            /**
             * @desc    Default template for ADU header
             * @see     7.4 Application data unit header (data type ISO 17575-3AduHeader)
             * @remark  All other ChargeReportConfiguration template shall modify this one
             */
            template (value) Iso17575_3AduHeader m_aduHeader_default := {
                protocolVersion         := c_Iso17575_3AduHeader_protocolVersion,
                informationSender       := m_informationSender,
                informationOriginator   := m_informationOriginator,
                tollContext             := m_tollCharger,
                aduSequenceNumber       := PX_ADU_SEQ_NUMBER,
                messageDate             := fx_getMessageDate()
            } // End of template m_aduHeader_default
            
        } // End of group ContextData_Common_ADU_Header
        /**
         * @desc 
         */
        group Default_Contents {
            /**
             * @desc    ChargeReportConfiguration default template
             * @see     [17575-3:2016], Context data - Clause 8.3.5.2.1 Data type ChargeReport
             * @remark  Use PICS to initialize properly this template. These values are assigned according to [16410-1:2016], Table C.4: ContextData1
             */
            template (value) ChargeReportContent m_chargeReportContent_default := {
                useOfCrAuthentication       := true,
                obeId                       := true,
                vehicleLPNr                 := false,
                paymentMeans                := false,
                tollContext                 := true,
                chargeReportFinalRecipient  := false,
                timeOfReport                := true,
                reportPeriod                := true,
                versionInfo                 := false,
                sumVatForThisSession        := false,
                accountStatus               := false,
                chargeReportCounter         := false,
                mileage                     := false,
                listOfCCCAttributes         := false
            } // End of template m_chargeReportContent_default
            /**
             * @desc    UsageStatementContent default template
             * @see     [17575-3:2016], Clause 8.5.5.3.3 Data type UsageStatementContent
             * @see     [17575-3:2016], Table 25 — Data elements in data type UsageStatementContent (informative)
             */
            template (value) UsageStatementContent m_usageStatementContent_default := {
                useOfUsageStatementAuthentication   := false,
                usageStatementId                    := false,
                tollContext                         := false,
                chargeReportFinalRecipient          := false,
                sumVat                              := false,
                aggregatedFee                       := false,
                aggregatedSingleTariffClassSession  := false,
                listOfChargeObjects                 := false,
                listOfDSRCUsageData                 := false,
                listOfRawUsageData                  := false,
                noUsage                             := false,
                additionalUsageInformation          := false
            } // End of template m_usageStatementContent_default
            /**
             * @desc    This is the minimal form of awaited UsageStatement message
             * @see     [17575-3:2016], Clause 7.6.2 UsageStatement
             */
            template (omit) UsageStatement m_usageStatement_default := {
                usageStatementId := omit,
                tollContext := omit,
                chargeReportFinalRecipient := omit,
                aggregatedFee := omit,
                sumVat := omit,
                aggregatedSingleTariffClassSession := omit,
                listOfChargeObjects := omit,
                listOfDsrcUsageData := omit,
                listOfRawUsageData := omit,
                noUsage := omit,
                additionalUsageInformation := omit
            } // End of template m_usageStatement_default
            
            template (omit) DetectedChargeObjectContent m_detectedChargeObjectContent_default := {
                chargeObjectIdContent := {
                    chargeReportFinalRecipient  := false
                },
                subObjectNumber                 := false,
                timeWhenUsed                    := false,
                mileageWhenUsed                 := false,
                currentTariffClass              := false,
                tariffClassDescriptionContent   := omit,
                vehicleDescription              := false,
                vehicleDescriptionContent       := omit,
                obeStatus                       := false,
                feeExclVat                      := false,
                sumVat                          := false,
                chargeObjDetectionMode          := false
            }
            
            /**
             * @desc    This is the minimal form of awaited AggregatedSingleTariffClassSessionContent message
             * @remark  All other UsageStatement template shall modify this one
             */
            template (value) AggregatedSingleTariffClassSessionContent m_aggregatedSingleTariffClassSessionContent_default := {
                timePeriodCovered               := false,
                currentTariffClass              := false,
                tariffClassDescriptionContent   := omit,
                vehicleDescription              := false,
                vehicleDescriptionContent       := omit,
                totalDistanceCovered            := false,
                numberOfDetectedEvents          := false,
                obeStatus                       := false,
                feeExclVat                      := false,
                sumVat                          := false
            } // End of template m_aggregatedSingleTariffClassSessionContent_default
            /**
             * @desc    This is the minimal form of awaited ListOfRawUsageDataContent_default message
             * @remark  All other UsageStatement template shall modify this one
             */
            template (value) ListOfRawUsageDataContent m_listOfRawUsageDataContent_default := {
                currentTariffClass              := false,
                tariffClassDescriptionContent   := omit,
                vehicleDescription              := false,
                vehicleDescriptionContent       := omit
            } // End of template m_listOfRawUsageDataContent_default

            /**
             * @desc    chargeReportConfigurationVersion default template
             * @see     [17575-3:2016], Context data - Clause 8.3.5.2   EFC attribute ChargeReportConfiguration
             * @remark  All other VersionAndValidity template shall modify this one
             */
            template (value) VersionAndValidity m_chargeReportConfigurationVersion_default := {
                version := PX_VERSION_ID,
                validFrom := PX_VALID_FROM
            }
            
            /**
             * @desc    ChargeReportConfiguration default template
             * @see     [17575-3:2016], Context data - Clause 8.3.5.2 EFC attribute ChargeReportConfiguration
             * @see     [16410-1:2016], Table C.4 —  ContextData1
             * @remark  All other ChargeReportConfiguration template shall modify this one
             * @remark  Omit means all parameters set to false
             */
            template (value) ChargeReportConfiguration m_chargeReportConfiguration_default := {
                applicablePartitions := { PX_TOLLCONTEXTPARTITIONID_1 },
                chargeReportContent := m_chargeReportContent_default,
                usageStatementContent := m_usageStatementContent_default,
                cccAttributesContent := omit,
                aggregatedSingleTariffClassSessionContent := omit,
                detectedChargeObjectContent := omit,
                listOfRawUsageDataContent := omit,
                listOfDsrcUsageDateContent := omit,
                aggregatedFeeContent := omit,
                measuredRawDataContent := omit,
                nmeaDataContent := omit,
                chargeReportConfigurationVersion := m_chargeReportConfigurationVersion_default
            } // End of template m_ChargeReportConfiguration_default
            
            /**
             * @desc    Main template for TollContextOverview data element
             * @param   p_tollContext Identify the toll charger that operates the toll scheme
             * @param   p_tollContextPartitions The list of identifiers of the toll context partitions belonging to the single toll context
             * @remark  All other TollContextOverview template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.2.2 Toll context overview
             * @see     [17575-3:2016], Table 3 — EFC attribute TollContextOverview (informative)
             */
            template (value) TollContextOverview m_tollContextOverview_default(
                                                                               in template (value) Provider                                     p_tollContext,
                                                                               in template (value) TollContextOverview.tollContextPartitions    p_tollContextPartitions := { PX_TOLLCONTEXTPARTITIONID_1 }
            ) := {
                tollContext                 := p_tollContext,
                tollContextPartitions       := p_tollContextPartitions,
                tollSchemeName              := omit,
                tollContextBoundingBoxes    := omit,
                tollContextOverviewVersion  := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template m_tollContextOverview_default
            
            /**
             * @desc    Main template for TollContextOverview data element
             * @param   p_tollContextPartitionId The identifier of the respective toll context partition for which the overview information is provided
             * @param   p_tollContextPartitionType A designation for the toll context partition
             * @param   p_operationalStatus Information regarding the period of operation of the toll context partition
             * @param   p_timeZone The time zone applicable for the toll context partition in relation to Coordinated Universal Time (UTC)
             * @remark  All other TollContextPartitionOverview template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.2.3 Toll context partition overview
             * @see     [17575-3:2016], Table 4 — EFC attribute TollContextPartitionOverview (informative)
             */
            template (value) TollContextPartitionOverview m_tollContextPartitionOverview_default(
                                                                                                 in template (value) TollContextPartitionId                 p_tollContextPartitionId,
                                                                                                 in template (value) TollSchemeType                         p_tollContextPartitionType := TollSchemeType_roadSectionPricing_,
                                                                                                 in template (value) OperationalStatus                      p_operationalStatus := m_operationalStatus_default,
                                                                                                 in template (value) TollContextPartitionOverview.timeZone  p_timeZone := 0
            ) := {
                tollContextPartitionId              := p_tollContextPartitionId,
                tollContextPartitionName            := omit,
                tollContextPartitionType            := p_tollContextPartitionType,
                operationalStatus                   := p_operationalStatus,
                timeZone                            := p_timeZone,
                dstOffset                           := omit,
                tollContextPartitionBoundingPolygon := omit,
                sendChargeReportIfEntering          := omit,
                precedenceLevel                     := omit,
                chargeReportFinalRecipient          := omit,
                tollContextPartitionOverviewVersion := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template m_tollContextPartitionOverview_default
            
            /**
             * @desc    Main template for TollContextOverview data element
             * @param   p_tollContextPartitionId The identifier of the respective toll context partition for which the overview information is provided
             * @param   p_tollContextPartitionType A designation for the toll context partition
             * @param   p_operationalStatus Information regarding the period of operation of the toll context partition
             * @param   p_timeZone The time zone applicable for the toll context partition in relation to Coordinated Universal Time (UTC)
             * @param   p_precedenceLevel Specify priorities for overlapping toll context partitions
             * @remark  All other TollContextPartitionOverview template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.2.3 Toll context partition overview
             * @see     [17575-3:2016], Table 4 — EFC attribute TollContextPartitionOverview (informative)
             */
            template (value) TollContextPartitionOverview m_tollContextPartitionOverview_precedenceLevel(
                                                                                                         in template (value) TollContextPartitionId         p_tollContextPartitionId,
                                                                                                         in template (value) TollSchemeType                 p_tollContextPartitionType := TollSchemeType_roadSectionPricing_,
                                                                                                         in template (value) OperationalStatus              p_operationalStatus := m_operationalStatus_default,
                                                                                                         in template (value) TollContextPartitionOverview.timeZone  p_timeZone := 0,
                                                                                                         in template (value) EfcAutonomousContextData.Int1          p_precedenceLevel := 0
            ) := {
                tollContextPartitionId              := p_tollContextPartitionId,
                tollContextPartitionName            := omit,
                tollContextPartitionType            := p_tollContextPartitionType,
                operationalStatus                   := p_operationalStatus,
                timeZone                            := p_timeZone,
                dstOffset                           := omit,
                tollContextPartitionBoundingPolygon := omit,
                sendChargeReportIfEntering          := omit,
                precedenceLevel                     := p_precedenceLevel,
                chargeReportFinalRecipient          := omit,
                tollContextPartitionOverviewVersion := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template m_tollContextPartitionOverview_default
            
            /**
             * @desc    Default template for TariffTable data element
             * @param   p_applicablePartitions The list of the identifiers of those toll context partitions the tariff table is applicable for
             * @param   p_tariffs The a list of tariff related data for each tariff class. Each of the list entries shall be of data type Tariff
             * @param   p_standardCurrency Used to determine the currency that shall be used
             * @remark  All other TariffTable template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.2.1 EFC attribute TariffTable
             * @see     [17575-3:2016], Table 5 — EFC attribute TariffTable (informative)
             */
            template (value) TariffTable m_tariffTable_default(
                                                               in template (value) TariffTable.applicablePartitions p_applicablePartitions,
                                                               in template (value) TariffTable.tariffs              p_tariffs,
                                                               in template (value) EfcDsrcApplication.PayUnit       p_standardCurrency
            ) := {
                applicablePartitions    := p_applicablePartitions,
                tariffs                 := p_tariffs,
                standardCurrency        := p_standardCurrency,
                typeOfFee               := omit,
                tariffTableVersion      := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template m_tariffTable_default
            
            /**
             * @desc    Default template for Tariff data element, to be used in singleton { m_tariff_default }
             * @remark  All other Tariff template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.2.2 Data type Tariff
             * @see     [17575-3:2016], Table 6 — Data type Tariff (informative)
             */
            template (value) Tariff m_tariff_default := { // TODO To be moved into PIXIT
                tariffClass                     := 1,
                chargeUnit                      := {
                    event := 5
                },
                roundingRuleForChargeUnitsUsed  := RoundingRule_no_,
                basicFeePerChargeUnit           := 10,
                roundingRuleForFee              := RoundingRule_no_,
                vat                             := omit,
                roundingRuleForVat              := omit,
                intervalScaleParameters         := omit,
                offsetFee                       := omit,
                minFee                          := omit,
                thresholdFee                    := omit,
                maxFee                          := omit,
                alternativeCurrency             := 978 // See ISO 4217: 0 is for 1:1 ratio, Euro code is 978=3D2h, (if i'm right!!')
            } // End of template m_tariff_default
            
            /**
             * @desc    Default template for Tariff data element, to be used in singleton { m_tariff_default }
             * @remark  All other CurrencyConversionTable template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.2.3 EFC attribute CurrencyConversionTable
             * @see     Table 6 — Data type Tariff (informative)
             */
            template (value) CurrencyConversionTable m_currencyConversionTable_default := { // TODO To be moved into PIXIT
                conversions                     := {
                    {
                        alternativeCurrency   := 1,
                        conversionRate        := 1
                    },
                    {
                        alternativeCurrency   := 2,
                        conversionRate        := 1
                    }
                },
                currencyConversionTableVersion  := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template m_currencyConversionTable_default
            
            /**
             * @desc    Default template for TariffClassDefinition data element
             * @remark  All other TariffClassDefinition template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.3.2 EFC attribute TariffClassDefinition
             * @see     [17575-3:2016], Table 8 — EFC attribute TariffClassDefinition (informative)
             */
            template (value) TariffClassDefinition m_tariffClassDefinition_default := { // TODO To be moved into PIXIT
                tariffClasses := {
                    {
                        tariffClassId := 50, // no user, time or location class
                        localVehicleClasses := {
                            20 // local vehicle class definitions no time/ location or user class
                        },
                        timeClasses := {
                            99 // any number referencing to the time class definition no vehicle or location class
                            
                        },
                        locationClasses := omit,
                        userClasses := omit
                    },
                    {
                        tariffClassId := 51, // no user, time or location class
                        localVehicleClasses := {
                            21 // resident
                        },
                        timeClasses := {
                            99 // any number referencing to the time class definition no vehicle or location class
                            
                        },
                        locationClasses := omit,
                        userClasses := omit
                    },
                    {
                        tariffClassId := 52, // no user, time or location class
                        localVehicleClasses := {
                            22 // fleet users
                        },
                        timeClasses := {
                            99 // any number referencing to the time class definition no vehicle or location class
                            
                        },
                        locationClasses := omit,
                        userClasses := omit
                    },
                    {
                        tariffClassId := 53, // no user, time or location class
                        localVehicleClasses := {
                            23 // exempt users
                        },
                        timeClasses := {
                            99 // any number referencing to the time class definition no vehicle or location class
                            
                        },
                        locationClasses := omit,
                        userClasses := omit
                    }
                },
                tariffClassDefinitionVersion := {
                    version := PX_VERSION_ID,
                    validFrom := PX_VALID_FROM
                }
            } // End of template m_tariffClassDefinition_default
            
            /**
             * @desc    Default template for LocalVehicleClassDefinition data element
             * @remark  All other LocalVehicleClassDefinition template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.4.2 Data type LocalVehicleClass
             * @see     [17575-3:2016], Table 11 — Data type LocalVehicleClass (informative)
             */
            template (value) LocalVehicleClassDefinition m_localVehicleClassDefinition_default := { 
                localVehicleClasses := {
                    {
                        localVehicleClassId := 50, // local definition
                        nominalElements := {
                            vehicleClasses := {
                                3 //acc. to EN 15509
                            },
                            vehicleTrainAxlesNumbers := omit,
                            euroValues := omit,
                            copValues := omit
                        },
                        ordinalElements := {
                            vehicleLengthOverall := omit,
                            vehicleHeightOverall := omit,
                            vehicleWidthOverall := omit,
                            vehicleFirstAxleHeight := omit,
                            vehicleTractorAxlesNumber := omit,
                            vehicleTrailerAxlesNumber := omit,
                            vehicleMaxLadenWeight := omit,
                            vehicleTrainMaximumWeight := omit,
                            vehicleWeightUnladen := omit,
                            vehicleWeightLaden := omit,
                            euroValue := omit,
                            copValue := omit,
                            vehicleClass := omit,
                            co2EmissionValue := omit,
                            dieselEmissionValue := omit,
                            exhaustEmissionValue := omit
                        },
                        priorityValue := 0
                    },
                    {
                        localVehicleClassId := 51, // local definition
                        nominalElements := {
                            vehicleClasses := {
                                3 //acc. to EN 15509
                            },
                            vehicleTrainAxlesNumbers := omit,
                            euroValues := {
                                euro_3
                            },
                            copValues := omit
                        },
                        ordinalElements := {
                            vehicleLengthOverall := omit,
                            vehicleHeightOverall := omit,
                            vehicleWidthOverall := omit,
                            vehicleFirstAxleHeight := omit,
                            vehicleTractorAxlesNumber := omit,
                            vehicleTrailerAxlesNumber := omit,
                            vehicleMaxLadenWeight := omit,
                            vehicleTrainMaximumWeight := omit,
                            vehicleWeightUnladen := omit,
                            vehicleWeightLaden := omit,
                            euroValue := omit,
                            copValue := omit,
                            vehicleClass := omit,
                            co2EmissionValue := omit,
                            dieselEmissionValue := omit,
                            exhaustEmissionValue := omit
                        },
                        priorityValue := omit
                    }
                },
                localVehicleClassVersion := {
                    version := PX_VERSION_ID,
                    validFrom := PX_VALID_FROM
                }
            } // End of template m_localVehicleClassDefinition_default
            
            /**
             * @desc    Default template for TimeClassDefinition data element
             * @remark  All other TimeClassDefinition template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.5 EFC attribute TimeClassDefinition
             * @see     [17575-3:2016], Table 12 — EFC attribute TimeClassDefinition (informative)
             */
            template (value) TimeClassDefinition m_timeClassDefinition_default := { // TODO To be moved into PIXIT
                timeClasses := {
                    {
                        timeClassId := 99,
                        nominalElements := omit,
                        ordinalElements := {
                            {
                                weekdays := {
                                    {
                                        startDay := Weekday_monday_,
                                        endDay := Weekday_friday_
                                    }
                                },
                                absoluteTimeOfDay := {
                                    {
                                        startTime := { // (apply daylight saving time)
                                            hours := 7,
                                            mins := 0,
                                            secs := 0
                                        }, 
                                        endTime := { // (apply daylight saving time)
                                            hours := 18,
                                            mins := 0,
                                            secs := 0
                                        } 
                                    }
                                },
                                relativeTimePeriods := omit,
                                periodsInYear := {
                                    {
                                        startDay := {
                                            year := 2010,
                                            month := 1,
                                            day := 2
                                        }, 
                                        endDay := {
                                            year := 2010,
                                            month := 12,
                                            day := 24
                                        } // (apply leap year correction)
                                    }
                                } 
                            }
                        }, // End of field ordinalElements
                        priorityValue := omit
                    }
                },
                timeClassDefinitionVersion := {
                    version := PX_VERSION_ID,
                    validFrom := PX_VALID_FROM
                }
            } // End of template m_timeClassDefinition_default
            
            /**
             * @desc    Default template for UserClassDefinition data element
             * @see     [17575-3:2016], Context data - Clause 8.3.3.2 Tariff table
             * @see     Clause 8.3.3.6 EFC attribute UserClassDefinition
             */
            /**
             * @desc    Default template for UserClassDefinition data element
             * @remark  All other UserClassDefinition template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.3.6 EFC attribute UserClassDefinition
             * @see     [17575-3:2016], Table 14 — EFC attribute UserClassDefinition (informative)
             */
            template (value) UserClassDefinition m_userClassDefinition_default := { // TODO To be moved into PIXIT
                userClasses := 
                {
                    {
                            userClassId := 20,
                            contractTypes := omit,
                            actualNumberOfPassengers    := omit,
                            priorityValue               := omit
                    },
                    {
                            userClassId := 21,
                            contractTypes := omit,
                            actualNumberOfPassengers    := omit,
                            priorityValue               := omit
                    },
                    {
                            userClassId := 22,
                            contractTypes := omit,
                            actualNumberOfPassengers    := omit,
                            priorityValue               := omit

                    },
                    {
                            userClassId := 23,
                            contractTypes := omit,
                            actualNumberOfPassengers    := omit,
                            priorityValue               := omit
                    }
                },
                userClassDefinitionVersion := {
                    version := PX_VERSION_ID,
                    validFrom := PX_VALID_FROM
                }
            } // End of template m_userClassDefinition_default
            
            /**
             * @desc    Default template for TollContextPartitionLayout data element
             * @remark  All other TollContextPartitionLayout template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.4 Requirements with regards to context layout
             * @see     [17575-3:2016], Table 16 — Data type TollContextPartitionLayout (informative)
             */
            template (value) TollContextPartitionLayout m_tollContextPartitionLayout_default := {
                tollContextPartitionId              := 0,
                layoutDescription                   := {
                    sectionPricingLayout            := {
                        sectionLayoutDescription := {
                            {
                                chargeObjectId := 5,
                                chargeObjectName := omit,
                                chargeObjectRefPoint := omit,
                                networkPoints := omit,
                                tollPath := {
                                    linkId := 1024,
                                    startPoint := {
                                        pointIdentifier := 33
                                    },
                                    endPoint := {
                                        pointIdentifier := 34
                                    },
                                    intermediatePoints := omit
                                },
                                liabilityRules := {
                                    minimumUsage := 512
                                },
                                pathStructureTowards := omit,
                                pathStructureOnwards := omit,
                                supportingInformation := omit,
                                chargeDistance := {
                                    predefinedDistance := {
                                        dist := 32,
                                        disUnit := 0
                                    }
                                },
                                realDistance := omit,
                                applicableTimeClasses := omit,
                                locationClass := 1025,
                                storageRequired := omit,
                                invoicingRelatedData := omit
                            } // End of field sectionPricingLayout
                        } // End of field sectionLayoutDescription
                    } // End of field sectionLayoutDescription
                }, // End of field layoutDescription
                geoRefPoint := omit,
                tollContextPartitionVersion := {
                    version := PX_VERSION_ID,
                    validFrom := PX_VALID_FROM
                }
            } // End of template m_tollContextPartitionLayout_default
            
            /**
             * @desc    Default template for ChargeReportingEvents data element
             * @see     [17575-3:2016], Context data - Clause 8.3.3.2 Tariff table
             * @see     Clause 8.3.5.1 EFC attribute ChargeReportingEvents
             */
            template (value) ChargeReportingEvents m_chargeReportingEvents_default := {
                 applicablePartitions           := { PX_TOLLCONTEXTPARTITIONID_1 }, 
                 absoluteTimeEvents             := omit,
                 relativeTimeEvents             := omit,
                 travelledDistanceEvents        := omit,
                 locationEvents                 := omit,
                 feeLimitEvents                 := omit,
                 chargeReportingEventsVersion   := m_chargeReportingEventsVersion_default
            } // End of template m_chargeReportingEvents_default
            
            /**
             * @desc    chargeReportingEventsVersion default template
             * @see     [17575-3:2016], Context data - Clause 8.3.5.2   EFC attribute ChargeReportConfiguration
             * @remark  All other VersionAndValidity template shall modify this one
             */
            template (value) VersionAndValidity m_chargeReportingEventsVersion_default := {
                version := PX_VERSION_ID,
                validFrom := PX_VALID_FROM
            } // End of template m_chargeReportingEventsVersion_default
            
            /**
             * @desc    Default template for ChargeReportingEvents data element
             * @remark  All other OperationalStatus template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.2.3 Toll context partition overview
             */
            template (value) OperationalStatus m_operationalStatus_default := {
                startsOperationAt   := fx_getMessageDate(),
                stopsOperationAt    := omit
            } // End of template m_operationalStatus_default
            
            /**
             * @desc    Main template for TollContextOverview data element
             * @param   p_tollContext Identify the toll charger that operates the toll scheme
             * @remark  All other TollContextOverview template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.2.2 Toll context overview
             * @see     [17575-3:2016], Table 3 — EFC attribute TollContextOverview (informative)
             */
            template (present) TollContextOverview mw_tollContextOverview_default(
                                                                                  in template (present) Provider p_tollContext := ?
            ) := {
                tollContext                 := p_tollContext,
                tollContextPartitions       := ?,
                tollSchemeName              := *,
                tollContextBoundingBoxes    := *,
                tollContextOverviewVersion  := {
                    version     := PX_VERSION_ID,
                    validFrom   := PX_VALID_FROM
                }
            } // End of template mw_tollContextOverview_default
            
            /**
             * @desc    This is the minimal form of awaited UsageStatement message
             * @see     [17575-1:2016], Clause 7.6.2 UsageStatement
             */
            template UsageStatement mw_usageStatement_default := {
                usageStatementId                    := ?,
                tollContext                         := *,
                chargeReportFinalRecipient          := *,
                aggregatedFee                       := *,
                sumVat                              := *,
                aggregatedSingleTariffClassSession  := *,
                listOfChargeObjects                 := *,
                listOfDsrcUsageData                 := *,
                listOfRawUsageData                  := *,
                noUsage                             := *,
                additionalUsageInformation          := *
            } // End of template mw_usageStatement_default
            
            /**
             * @desc    This is the minimal form of awaited UsageStatement message
             * @see     ISO 17575--1:2016 Clause 7.6.2 UsageStatement
             */
            template (present) UsageStatement mw_usageStatement_tollContext(
                                                                            template (present) Provider p_tollContext := ?
            ) modifies mw_usageStatement_default := {
                tollContext                         := p_tollContext
            } // End of template mw_usageStatement_tollContext
            
            /**
             * @desc    Default template for TollContextPartitionLayout data element
             * @remark  All other TollContextPartitionLayout template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.4 Requirements with regards to context layout
             * @see     [17575-3:2016], Table 16 — Data type TollContextPartitionLayout (informative)
             */
            template (present) TollContextPartitionLayout mw_tollContextPartitionLayout(
                                                                                        template (present) TollContextPartitionId p_tollContextPartitionId := ?,
                                                                                        template (present) Layout p_layout := ?
            ) := {
                tollContextPartitionId      := p_tollContextPartitionId,
                layoutDescription           := p_layout,
                geoRefPoint                 := *,
                tollContextPartitionVersion := ?
            } // End of template mw_tollContextPartitionLayout_default
            
            /**
             * @desc    Default template for Layout/sectionLayoutDescription data element
             * @param   p_sectionLayout SectionLayout value to check
             * @remark  All other TollContextPartitionLayout template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.4.2 Requirements for section based layout
             */
            template (present) Layout mw_layout_sectionPricingLayout(
                                                                     template (present) Layout.sectionPricingLayout.sectionLayoutDescription p_sectionLayout := ?
            ) := {
                sectionPricingLayout := {
                    sectionLayoutDescription := p_sectionLayout
                }
            } // End of template mw_layout_sectionPricingLayout
            
            /**
             * @desc    Default template for Layout/sectionLayoutDescription data element
             * @param   p_areaPricingLayout AreaPricingLayout value to check
             * @remark  All other TollContextPartitionLayout template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.4.2 Requirements for section based layout
             */
            template (present) Layout mw_layout_areaPricingLayout(
                                                                  template (present) Layout.areaPricingLayout p_areaPricingLayout := ?
            ) := {
                areaPricingLayout := p_areaPricingLayout
            } // End of template mw_layout_areaPricingLayout
            
            /**
             * @desc    Default template for Layout/sectionLayoutDescription data element
             * @param   p_cordonPricingLayout CordonPricingLayout value to check
             * @remark  All other TollContextPartitionLayout template shall modify this one
             * @see     [17575-3:2016], Clause 8.5.4.2 Requirements for section based layout
             */
            template (present) Layout mw_layout_cordonPricingLayout(
                                                                    template (present) Layout.cordonPricingLayout p_cordonPricingLayout := ?
            ) := {
                cordonPricingLayout := p_cordonPricingLayout
            } // End of template mw_layout_cordonPricingLayout
            
        } // End of group Default_Contents

        /**
         * @desc    Group of Context Date describes in Annex C.2: Data structure - Table C.8
         * @see     [17575-1:2016], Charging for data element descriptions
         */
        group DefaultContextData {
            
            /**
             * @desc    Default ContextData template
             * @remark  It is used as ContextData1 in ContextData ATS
             */
            template Iso17575_3AduBody m_contextData_default := {
                tollContextOverview             := m_optionally_Signed_Unsecured<TollContextOverview>(m_tollContextOverview_default(PX_TOLL_CONTEXT_ID_1)),
                tollContextPartitionOverview    := m_optionally_Signed_Unsecured<TollContextPartitionOverviews>({ m_tollContextPartitionOverview_default(PX_TOLLCONTEXTPARTITIONID_1) }),
                tariffTable                     := omit,
                currencyConversionTable         := omit,
                tariffClassDefinition           := omit,
                localVehicleClassDefinition     := omit,
                timeClassDefinition             := omit,
                userClassDefinition             := omit,
                tollContextLayout               := omit,
                chargeReportingEvents           := m_optionally_Signed_Unsecured<ChargeReportingEventss>({ m_chargeReportingEvents_default }),
                chargeReportConfiguration       := m_optionally_Signed_Unsecured<ChargeReportConfigurations>({ m_chargeReportConfiguration_default }),
                tollContextVersion              := 1 // [TS 17575-3], Clause 6.3.1 Protocol versioning
            } // End of template m_contextData_default
            
        } // End of group DefaultContextData
        
    } // End of group Common_contextData

    group SecurityTemplates {
        
        template (value) Optionally_Signed<PduPayload> m_optionally_Signed_Unsecured<in type PduPayload> (
                                                                                                          in template (value) PduPayload p_unsigned_data
        ) := {
            unsigned_payload := p_unsigned_data
        } // End of template m_optionally_Signed_Unsecured
        
        template (present) Optionally_Signed<PduPayload> mw_optionally_Signed_Unsecured<in type PduPayload> (
                                                                                                             template (present) PduPayload p_unsigned_data := ?
        ) := {
            unsigned_payload:= p_unsigned_data
        } // End of template mw_optionally_Signed_Unsecured
        
    }
} // End of module LibEfc_Common_Templates
